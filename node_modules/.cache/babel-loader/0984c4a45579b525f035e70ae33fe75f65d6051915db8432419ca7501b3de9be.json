{"ast":null,"code":"var _jsxFileName = \"/Users/aniruddhkapileshwari/Desktop/FALL24/EWA/Project/my-react-app/src/Component/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchMessages = async message => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:5005/webhooks/rest/webhook', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sender: 'user',\n          // You can change this to a dynamic user ID if needed\n          message: message\n        })\n      });\n      const data = await response.json();\n      const botMessages = data.map(msg => {\n        if (msg.text) {\n          return {\n            sender: 'bot',\n            text: msg.text,\n            buttons: msg.buttons || []\n          };\n        }\n        return null;\n      });\n      setMessages(prevMessages => [...prevMessages, ...botMessages.filter(Boolean)]);\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n      setIsLoading(false);\n    }\n  };\n  const handleSend = e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: input\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    fetchMessages(input);\n    setInput('');\n  };\n  const handleButtonClick = payload => {\n    fetchMessages(payload);\n  };\n  const renderMessage = message => {\n    if (message.text) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }, this);\n    }\n    if (message.buttons && message.buttons.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: message.buttons.map((button, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: button.payload,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            children: button.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${message.sender === 'bot' ? 'bot' : 'user'}`,\n        children: renderMessage(message)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-container\",\n      onSubmit: handleSend,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Ask me something...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"sVGGnSpJyr44tGn0fmOMIwNVzbg=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","fetchMessages","message","response","fetch","method","headers","body","JSON","stringify","sender","data","json","botMessages","map","msg","text","buttons","prevMessages","filter","Boolean","error","console","handleSend","e","preventDefault","trim","userMessage","handleButtonClick","payload","renderMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","button","index","href","target","rel","title","onSubmit","type","value","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/aniruddhkapileshwari/Desktop/FALL24/EWA/Project/my-react-app/src/Component/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Chatbot.css';\n\nconst Chatbot = () => {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    const fetchMessages = async (message) => {\n        setIsLoading(true);\n        try {\n            const response = await fetch('http://localhost:5005/webhooks/rest/webhook', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    sender: 'user', // You can change this to a dynamic user ID if needed\n                    message: message,\n                }),\n            });\n\n            const data = await response.json();\n            const botMessages = data.map((msg) => {\n                if (msg.text) {\n                    return { sender: 'bot', text: msg.text, buttons: msg.buttons || [] };\n                }\n                return null;\n            });\n\n            setMessages((prevMessages) => [...prevMessages, ...botMessages.filter(Boolean)]);\n            setIsLoading(false);\n        } catch (error) {\n            console.error('Error fetching messages:', error);\n            setIsLoading(false);\n        }\n    };\n\n    const handleSend = (e) => {\n        e.preventDefault();\n        if (!input.trim()) return;\n\n        const userMessage = { sender: 'user', text: input };\n        setMessages((prevMessages) => [...prevMessages, userMessage]);\n        fetchMessages(input);\n        setInput('');\n    };\n\n    const handleButtonClick = (payload) => {\n        fetchMessages(payload);\n    };\n\n    const renderMessage = (message) => {\n        if (message.text) {\n            return <p>{message.text}</p>;\n        }\n\n        if (message.buttons && message.buttons.length > 0) {\n            return (\n                <div className=\"buttons\">\n                    {message.buttons.map((button, index) => (\n                        <a\n                            href={button.payload}\n                            key={index}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <button className=\"btn\">{button.title}</button>\n                        </a>\n                    ))}\n                </div>\n            );\n        }\n\n        return null;\n    };\n\n    return (\n        <div className=\"chatbot-container\">\n            <div className=\"messages-container\">\n                {messages.map((message, index) => (\n                    <div\n                        key={index}\n                        className={`chat-message ${message.sender === 'bot' ? 'bot' : 'user'}`}\n                    >\n                        {renderMessage(message)}\n                    </div>\n                ))}\n                {isLoading && <div className=\"loading\">Typing...</div>}\n            </div>\n            <form className=\"input-container\" onSubmit={handleSend}>\n                <input\n                    type=\"text\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    placeholder=\"Ask me something...\"\n                />\n                <button type=\"submit\">Send</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}